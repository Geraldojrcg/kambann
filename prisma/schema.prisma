// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = "file:./db.sqlite"
    // url      = env("DATABASE_URL")
}

model Account {
  id                                String  @id @default(cuid())
  userId                            String
  type                              String
  provider                          String
  providerAccountId                 String
  refresh_token                     String? 
  refresh_token_expires_in          Int?
  access_token                      String?  
  expires_at                        Int?
  token_type                        String?
  scope                             String?
  id_token                          String?  
  session_state                     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  projects      Project[]
  tasks         Task[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
    id            String    @id @default(cuid())
    name          String
    description   String?
    users         User[]
    taskLists     TaskList[]
}

model TaskList {
    id            String    @id @default(cuid())
    name          String
    projectId     String
    project       Project   @relation(fields: [projectId], references: [id])
    tasks         Task[]
}

model Task {
    id            String    @id @default(cuid())
    name          String
    description   String?
    ownerId       String
    owner         User      @relation(fields: [ownerId], references: [id])
    listId        String
    list          TaskList  @relation(fields: [listId], references: [id])
}
